#include <algorithm>
#include <iostream>
#include <string>

using namespace std;

template <class T>
class Set {
public:
  Set() : count(0) {}

  Set(const Set<T>& s) {
    count = s.count;
    for (int i = 0; i < count; i++)
      element[i] = s.element[i];
  }

  void display() {
    int j;
    for (j = 0; j < count; j++)
     cout << element[j] << " ";
  }

  int add(const T& a){
    if (find(element, element + count, a) != element + count) {
      return 0; 
    }

    if (count < 100) {
      element[count] = a;
      count++;
      return 1;
    } else {
      return 0;
    }
  }

  int add(const Set<T>& other) {
    int initial = count;
    for (int i = 0; i < other.count; i++)
      add(other.element[i]);

    return count - initial;
  }

private:
  T element[100];
  int count;
};